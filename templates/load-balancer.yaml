Description: flo cluster load balancer stack

Parameters:
  TrustedCidr:
    Type: String
  ServicePort:
    Type: Number


Resources:
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${AWS::StackName}-alb
      SecurityGroupIngress:
        - CidrIp: !Ref TrustedCidr
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
      VpcId: !ImportValue flo-cluster-vpc-id


  FloClusterSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties: 
      GroupId: !ImportValue flo-cluster-security-group
      Description: intercluster-communication
      IpProtocol: -1
      SourceSecurityGroupId: !Ref LoadBalancerSecurityGroup


  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - !ImportValue flo-cluster-subnet-1
        - !ImportValue flo-cluster-subnet-2
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup


  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup


  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: LoadBalancer
    Properties:
      VpcId: !ImportValue flo-cluster-vpc-id
      Port: !Ref ServicePort
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 30


  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref LoadBalancerListener
      Priority: 1
      Conditions:
        - Field: path-pattern
          Values:
            - /
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward


Outputs:
  TargetGroup:
    Value: !Ref TargetGroup

  ServiceUrl:
    Description: URL of the load balancer for the sample service.
    Value: !Sub http://${LoadBalancer.DNSName}

  LoadBalancerSecurityGroup:
    Value: !Ref LoadBalancerSecurityGroup

  TargetGroup:
    Value: !Ref TargetGroup
    Export:
      Name: flo-cluster-target-group
